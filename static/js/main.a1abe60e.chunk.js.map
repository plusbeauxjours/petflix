{"version":3,"sources":["assets/noPosterSmall.png","Components/Header/Header.tsx","Components/Header/index.ts","Components/Section.tsx","Components/Loader.tsx","Components/Message.tsx","Components/Poster.tsx","Routes/Home/HomePresenter.tsx","api.tsx","Routes/Home/index.ts","Routes/Home/HomeContainer.tsx","Routes/TV/TVPresenter.tsx","Routes/TV/index.ts","Routes/TV/TVContainer.tsx","Routes/Search/SearchPresenter.tsx","Routes/Search/index.ts","Routes/Search/SearchContainer.tsx","Routes/Detail/DetailPresenter.tsx","Routes/Detail/index.ts","Routes/Detail/DetailContainer.tsx","Components/Router.tsx","Components/GlobalStyles.ts","Components/App.tsx","index.tsx"],"names":["module","exports","HeaderContainer","styled","header","List","ul","Item","li","props","current","SLink","Link","Header","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","Loader","color","Text","Message","text","Image","bgUrl","Rating","Year","ImageContainer","Poster","id","imageUrl","rating","year","isMovie","require","role","aria-label","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","collection","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","target","preventDefault","searchByTerm","a","console","log","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","Imdb","DetailPresenter","result","backdrop_path","runtime","episode_run_time","href","imdb_id","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1abe60e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst HeaderContainer = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li<ITheme>`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface ITheme {\n  current: boolean;\n}\n\nconst Header = ({ location: { pathname } }) => (\n  <HeaderContainer>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </HeaderContainer>\n);\n\nexport default withRouter(Header);\n","import Header from \"./Header\";\nexport default Header;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\ninterface IProps {\n  title: string;\n  children: any;\n}\n\nconst Section: React.FunctionComponent<IProps> = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nconst Loader = () => (\n  <Container>\n    <ScaleLoader color={\"white\"} />\n  </Container>\n);\n\nexport default Loader;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: #e74c3c;\n`;\n\ninterface IProps {\n  text: string;\n}\n\nconst Message: React.FunctionComponent<IProps> = ({ text }) => (\n  <Container>\n    <Text>{text}</Text>\n  </Container>\n);\n\nexport default Message;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div<ITheme>`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst ImageContainer = styled.div<any>`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\ninterface ITheme {\n  bgUrl: string;\n}\n\ninterface IProps {\n  id: number;\n  imageUrl: string;\n  title: string;\n  rating: number;\n  year: string;\n  isMovie: boolean;\n}\n\nconst Poster: React.FunctionComponent<IProps> = ({\n  id,\n  imageUrl,\n  title,\n  rating,\n  year,\n  isMovie\n}) => (\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nexport default Poster;\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\ninterface IProps {\n  nowPlaying: any;\n  upcoming: any;\n  popular: any;\n  loading: boolean;\n  error: null;\n}\n\nconst HomePresenter: React.FunctionComponent<IProps> = ({\n  nowPlaying,\n  upcoming,\n  popular,\n  loading,\n  error\n}) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"01da2a336a604956c260900d1835847f\",\n    language: \"en-US\"\n  }\n});\n\nexport const movieApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    }),\n  collection: id => api.get(`collection/${id}`)\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"../../api\";\n\ninterface IProps {\n  nowPlaying: null;\n  upcoming: null;\n  popular: null;\n  loading: true;\n  error: null;\n}\n\ninterface IState {\n  nowPlaying: any;\n  upcoming: any;\n  popular: any;\n  loading: boolean;\n  error: string;\n}\n\nclass HomeContainer extends React.Component<IProps, IState> {\n  public state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    loading: true,\n    error: null\n  };\n  public async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await movieApi.popular();\n      this.setState({ nowPlaying, upcoming, popular });\n    } catch {\n      this.setState({ error: \"Can't find movie informateion\" });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n  public render() {\n    const { nowPlaying, upcoming, popular, loading, error } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default HomeContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\ninterface IProps {\n  topRated: any;\n  popular: any;\n  airingToday: any;\n  loading: boolean;\n  error: string;\n}\n\nconst TVPresenter: React.FunctionComponent<IProps> = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\ninterface IProps {\n  topRated: any;\n  popular: any;\n  airingToday: string;\n  loading: boolean;\n  error: string;\n}\n\ninterface IState {\n  topRated: any;\n  popular: any;\n  airingToday: string;\n  loading: boolean;\n  error: string;\n}\n\nclass TVContainer extends React.Component<IProps, IState> {\n  public state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n  public async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({ error: \"Can't find TV informateion\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  public render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n\nexport default TVContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\ninterface IProps {\n  movieResults: any;\n  tvResults: any;\n  searchTerm: string;\n  loading: boolean;\n  error: string;\n  handleSubmit: (event) => void;\n  updateTerm: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst SearchPresenter: React.FunctionComponent<IProps> = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message text={error} />}\n    {tvResults &&\n      movieResults &&\n      movieResults.length === 0 &&\n      tvResults &&\n      tvResults.length === 0 && <Message text=\"Nothing found\" />}\n  </Container>\n);\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"../../api\";\n\ninterface IProps {\n  movieResults: any;\n  tvResults: any;\n  searchTerm: string;\n  loading: boolean;\n  error: string;\n}\n\ninterface IState {\n  movieResults: any;\n  tvResults: any;\n  searchTerm: string;\n  loading: boolean;\n  error: string;\n}\n\nclass SearchContainer extends React.Component<IProps, IState> {\n  public state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n  public render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n  public updateTerm: React.ChangeEventHandler<HTMLInputElement> = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n  public handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n  public searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults }\n      } = await movieApi.search(searchTerm);\n      console.log(movieResults);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      console.log(tvResults);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n}\n\nexport default SearchContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div<ITheme>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(10px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div<ITheme>`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Imdb = styled.span`\n  font-weight: 800;\n  font-size: 14px;\n`;\n\ninterface ITheme {\n  bgImage: string;\n}\n\ninterface IProps {\n  result: any;\n  error: string;\n  loading: boolean;\n  isMovie: boolean;\n}\n\nconst DetailPresenter: React.FunctionComponent<IProps> = ({\n  result,\n  loading,\n  error,\n  isMovie\n}) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\n          | Nomflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            {isMovie && (\n              <>\n                <a href={`https://www.imdb.com/title/${result.imdb_id}`}>\n                  <Item>\n                    <Imdb>IMDb</Imdb>\n                  </Item>\n                </a>\n                <Divider>•</Divider>\n              </>\n            )}\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              <span role=\"img\" aria-label=\"rating\">\n                ⭐️\n              </span>\n              &nbsp;\n              {result.vote_average}/10\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n      {error && <Message text={error} />}\n    </Container>\n  );\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { RouteComponentProps } from \"react-router\";\nimport { movieApi, tvApi } from \"../../api\";\n\ninterface IProps extends RouteComponentProps<any> {}\n\ninterface IState {\n  result: any;\n  loading: boolean;\n  error: string;\n  isMovie: boolean;\n}\n\nclass DetailContainer extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      loading: true,\n      error: null,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n  public async componentDidMount() {\n    const {\n      match: {\n        params: { id = null }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Cant find anythig.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n  public render() {\n    const { result, loading, error, isMovie } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        loading={loading}\n        error={error}\n        isMovie={isMovie}\n      />\n    );\n  }\n}\n\nexport default DetailContainer;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Home from \"../Routes/Home\";\nimport TV from \"../Routes/TV\";\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact={true} component={Home} />\n        <Route path=\"/tv\" exact={true} component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/tv/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:#18181C;\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}